<?php

/**
 * Saves vocabulary
 *
 * This function is used to save a (new) vocabulary. If a vocabulary
 * with the same machine name already exists, it is updated.
 *
 * The three parameter variables are expected to be strings.
 *
 * We will use this function in hook_enable()
 */
function _loopedia_save_or_update_vocabulary($name, $machine_name, $description)
{
  $new_vocab = new stdClass();
  $new_vocab->name = $name;
  $new_vocab->machine_name = $machine_name;
  $new_vocab->description = $description;

  // The following part checks if the vocabulary already exists. If it
  // finds an existing machine name it sets the corresponding vid. This
  // "vid" has to be set if we want to update a vocabulary (and not
  // create a new one).
  // https://api.drupal.org/api/drupal/modules!taxonomy!taxonomy.module/function/taxonomy_vocabulary_save/7
  //
  $vocab_temp = taxonomy_vocabulary_machine_name_load($machine_name);
  if ($vocab_temp != FALSE) {
    $new_vocab->vid = $vocab_temp->vid;
  }

  // Now we can give our newly created vocabulary object "new_vocab" to
  // the save function. This function only accepts (class) objects as
  // arguments; not arrays.
  taxonomy_vocabulary_save($new_vocab);
}// end of function loopedia_save_or_update_vocabulary()





/**
 * Saves or updates an array of taxonomy terms.
 *
 * @param array $terms_def
 *   The definitions of new terms in an array (see code, weher this
 *   function is used)
 *
 * @param string $vocab_machine_name
 *   The vocabulary machine name.
 */
function _loopedia_save_or_update_taxonomy_terms($terms_def, $vocab_machine_name)
{

  $vocab = taxonomy_vocabulary_machine_name_load($vocab_machine_name);
  $existing_terms = taxonomy_get_tree($vocab->vid);

  foreach ($terms_def as $term)
  {
    $term_new = new stdClass();
    $term_new->name = $term['name'];
    $term_new->description = $term['description'];
    $term_new->vid = $vocab->vid;
    foreach ($existing_terms as $term_e)
    {
      if ($term_e->name == $term['name'])
      {
        $term_new->tid = $term_e->tid;
      }
    }
    taxonomy_term_save($term_new);
  }

}// end of function loopedia_save_or_update_taxonomy_terms()





/**
 * Implements hook_enable().
 *
 * This is taken from
 * http://www.webomelette.com/taxonomy-vocabulary-term-programatically-drupal-7
 * I saved this site in "loopedia_reference_collection/web_pages/How to
 * Create Taxonomy Vocabularies and Terms Programatically in Drupal 7.pdf".
 * This Text uses the hook_install() to save the vocabulary; but we want
 * to be able to update the vocabulary after installation. This is why
 * we used the hook_enable(); we just have to update this code and
 * disable and (re-)enable the module.
 */
function loopedia_enable()
{
  // Loopedia test Vocabulary:
  //
  // ..save_or_update_vocabulary($name, $machine_name, $description)
  _loopedia_save_or_update_vocabulary(
    'Loopedia Test Vocabulary',
    'loopedia_test_vocabulary',
    'This vocabulary has a special purpose.'
  );


  // Here, we define the terms of our vocabulary
  $terms_def = array(
    array(
      'name' => 'Term 1',
      'description' => 'This is term 1.',
    ),
    array(
      'name' => 'Term 2',
      'description' => 'This is term 2.',
    ),
    array(
      'name' => 'Term 3',
      'description' => 'This is term 3.',
    ),
  );

  _loopedia_save_or_update_taxonomy_terms(
    $terms_def,
    'loopedia_test_vocabulary'
  );
  // End of Loopedia Text vocabulary


  // Code for custom conten type loopedia_integral:
  node_types_rebuild();
  $types = node_type_get_types();
  node_add_body_field($types['loopedia_integral']);
  _loopedia_update_custom_fields();


}// end of function loopedia_enable()


/**
 * Implements hook_install().
 */
function loopedia_install() {
    node_types_rebuild();
    $types = node_type_get_types();
    node_add_body_field($types['loopedia_integral']);
    _loopedia_create_custom_fields();
}







/**
 * Creates custom fields and instances
 */
 function _loopedia_create_custom_fields()
 {
   foreach (_loopedia_integral_installed_fields() as $field)
   {
     field_create_field($field);
   }

   foreach (_loopedia_integral_installed_instances() as $instance)
   {
    //  $instance['entity_type'] = 'node';
    //  $instance['bundle'] = 'loopedia_integral'
    field_create_instance($instance);
   }
 }



 /**
  * Uptades custom fields and instances
  */
  function _loopedia_update_custom_fields()
  {
    foreach (_loopedia_integral_installed_fields() as $field)
    {
      field_update_field($field);
    }

    foreach (_loopedia_integral_installed_instances() as $instance)
    {
     //  $instance['entity_type'] = 'node';
     //  $instance['bundle'] = 'loopedia_integral'
     field_update_instance($instance);
    }
  }






/**
 * Defines fields for the loopedia integral cnotent type.
 *
 * This is done here for readability reasons..
 *
 * @return array
 *   An associative array specifying the fields we wish to add to our
 *   loopedia node type.
 */
function _loopedia_integral_installed_fields()
{
  $field_bases = array();

  $field_bases['loopedia_long_text'] = array(
    'active' => 1,
    'cardinality' => -1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'loopedia_long_text',
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(),
    'translatable' => 0,
    'type' => 'text_long',
  );

  $field_bases['loopedia_numbers'] = array(
    'active' => 1,
    'cardinality' => -1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'loopedia_numbers',
    'indexes' => array(),
    'locked' => 0,
    'module' => 'number',
    'settings' => array(),
    'translatable' => 0,
    'type' => 'number_integer',
  );

  $field_bases['loopedia_term_reference'] = array(
    'active' => 1,
    'cardinality' => -1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'loopedia_term_reference',
    'indexes' => array(
      'tid' => array(
        0 => 'tid',
      ),
    ),
    'locked' => 0,
    'module' => 'taxonomy',
    'settings' => array(
      'allowed_values' => array(
        0 => array(
          'vocabulary' => 'loopedia_test_vocabulary',
          'parent' => 0,
        ),
      ),
    ),
    'translatable' => 0,
    'type' => 'taxonomy_term_reference',
  );

  $field_bases['loopedia_text'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'loopedia_text',
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(
      'max_length' => 255,
    ),
    'translatable' => 0,
    'type' => 'text',
  );

  return $field_bases;
}



/**
 * Defines the field instances for loopedia_integral content type.
 *
 * @return array
 *   An associative array specifying the instances of fields we wish to
 *   add to loopedia_integral
 */
function _loopedia_integral_installed_instances()
{
  $field_instances = array();

  $field_instances['loopedia_integral-loopedia_long_text'] = array(
    'bundle' => 'loopedia_integral',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'Help textt',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 3,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'loopedia_long_text',
    'label' => 'loopedia long text',
    'required' => 1,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => 5,
      ),
      'type' => 'text_textarea',
      'weight' => -1,
    ),
  );

  $field_instances['loopedia_integral-loopedia_numbers'] = array(
    'bundle' => 'loopedia_integral',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'This is the help text for Features numbers',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'number',
        'settings' => array(
          'decimal_separator' => '.',
          'prefix_suffix' => TRUE,
          'scale' => 0,
          'thousand_separator' => '',
        ),
        'type' => 'number_integer',
        'weight' => 1,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'loopedia_numbers',
    'label' => 'Features numbers',
    'required' => 1,
    'settings' => array(
      'max' => 2048,
      'min' => 10,
      'prefix' => '',
      'suffix' => '',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'number',
      'settings' => array(),
      'type' => 'number',
      'weight' => -3,
    ),
  );

  $field_instances['loopedia_integral-loopedia_term_reference'] = array(
    'bundle' => 'loopedia_integral',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'Help text',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'taxonomy',
        'settings' => array(),
        'type' => 'taxonomy_term_reference_link',
        'weight' => 2,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'loopedia_term_reference',
    'label' => 'features term reference',
    'required' => 0,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_buttons',
      'weight' => 4,
    ),
  );

  // Exported field_instance: 'node-features_integral-field_features_text'.
  $field_instances['loopedia_integral-loopedia_text'] = array(
    'bundle' => 'loopedia_integral',
    'default_value' => array(
      0 => array(
        'value' => 'default value',
      ),
    ),
    'deleted' => 0,
    'description' => 'This is the help text for the features text field',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 0,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'loopedia_text',
    'label' => 'Short text',
    'required' => 1,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 60,
      ),
      'type' => 'text_textfield',
      'weight' => -4,
    ),
  );

  return $field_instances;
}






/**
* Implements hook_uninstall().
*
* This function is called when we uninstall the module. It deletes the
* vocabulary.
*/
function loopedia_uninstall()
{
  // Uninstall code for the Taxonomy:
  $vocab = taxonomy_vocabulary_machine_name_load('loopedia_test_vocabulary');
  taxonomy_vocabulary_delete($vocab->vid);




  // Uninstall code for the custom node and fields:
  foreach (array_keys(_loopedia_integral_installed_fields()) as $field)
  {
    field_delete_field($field);
  }

  $instances = field_info_instances('node', 'loopedia_integral');
  foreach ($instances as $instance_name => $fieldinstance)
  {
    field_delete_instance($fieldinstance);
  }
}
