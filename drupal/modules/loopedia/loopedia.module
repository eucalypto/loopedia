<?php

/**
 * @file
 * Module file for my Loopedia Module
 */



/**
 * Implements hook_node_info().
 *
 * We use hook_node_info() to define the loopedia node content type.
 */
function loopedia_node_info()
{
  return array(
    'lop_integral' => array(
      'name' => t('Integral'),
      // 'base' should be the (machine) name of the module. If it is
      // not, this content type will not appear in structure -> content
      // type.
      'base' => 'loopedia',
      'description' => t('This is the node type for Feynman Integrals'),
      'has_title' => '1',
      'title_label' => t('Integral Title'),
      'help' => t('This is an explanation that should help you.')
    ),
  );
}


/**
 * Implements hook_form().
 *
 * This is the form that the user sees when he wants to upload an integral.
 *
 */
function loopedia_form($node, $form_state) {
  // node_content_form() is the standard function that returns a form. It is
  // provided by the "node" module.
  return node_content_form($node, $form_state);
}


/**
 * Implements hook_form_alter().
 */
function loopedia_form_alter(&$form, &$form_state, $form_id)
{
  dpm($form_id);
  // dpm($form);
  // dpm($form_state);
  $form['revision_information']['revision']['#default_value'] = 1;
  dpm($form);
}



/**
* Implements of hook_init().
*
* This function can be used for dirty debugging because it is executed
* on all page requests that are not cached.
*/
function loopedia_init() {
  // $arr = array();
  // $i = 13;
  // $arr['bla' . $i . 'blub'] = 'yes' . ' no' . $i . ' maybe';
  // dpm($arr);
  // drupal_set_message('Beware I live!');
  // $types = node_type_get_types();
  // dpm($types);
  //
  // $type = node_type_load('lop-integral');
  // dpm($type);
  // $instance_info = field_info_instance('node', 'field_blabla', 'article');
  // dpm($instance_info);
  //
  // $fieldinfo = field_info_field('loopedia_term_reference');
  // dpm($fieldinfo);
  // dpm(hook_field_storage_info());
}
